// Code generated by hero.
// source: D:\GoProjects\af_dp_clean_core\graph\plugin\extgen\template\gql_test.tpl
// DO NOT EDIT!
package template

import (
	"bytes"

	"github.com/99designs/gqlgen/codegen"
)

func GQLTestFunc(objects codegen.Objects, buffer *bytes.Buffer) {
	buffer.WriteString(`
package test

import (
	"github.com/anden007/af_dp_clean_core/graph/test/mock"
	"testing"

	"github.com/stretchr/testify/assert"
)

`)
	if objects != nil {
		for _, object := range objects {
			for _, field := range object.Fields {
				if field.IsResolver {
					if object.Name == "Query" {
						buffer.WriteString(`
func Query_`)
						buffer.WriteString(field.GoFieldName)
						buffer.WriteString(`(t *testing.T) {
	_, err := mock.MockResolver().Query().`)
						buffer.WriteString(field.GoFieldName)
						buffer.WriteString(`(mock.MockContext, "请自行修改参数")
	assert.Nil(t, err)
}
`)
					} else if object.Name == "Mutation" {

						buffer.WriteString(`
func Mutation_`)
						buffer.WriteString(field.GoFieldName)
						buffer.WriteString(`(t *testing.T) {
	_, err := mock.MockResolver().Mutation().`)
						buffer.WriteString(field.GoFieldName)
						buffer.WriteString(`(mock.MockContext, "请自行修改参数")
	assert.Nil(t, err)
}
`)

					}
				}
			}
		}
	}

}
